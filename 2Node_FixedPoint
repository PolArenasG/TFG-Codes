import numpy as np
import matplotlib.pyplot as plt

# Parameters
b = 0.15
c = 0.1
p = 0.5
a = 0.9
L0 = 1
K = 100  # Number of simulations
T = 1000  # Number of time steps

L_fin = []  # List to store the final values of L(T)

# Run simulations
for sim in range(K):
    L = np.zeros(T+1)  # Create a list to store L(t) at each time step
    L[0] = L0  # Initial value
    for t in range(1, T+1):
        L[t] = a * L[t-1]  # System evolution
        if np.random.random() < p:  # Probability of increase by b
            L[t] += b
        if np.random.random() < p:  # Probability of decrease by c
            L[t] -= c

    # Store the final value of L(T) in the L_fin list
    L_fin.append(L[-1])

# Plot the final values of each simulation connected with lines
plt.plot(range(K), L_fin, marker='o', linestyle='-', color='b')  # Connect the final values with lines
plt.title('Connection of final values L(T) for each simulation')
plt.xlabel('Simulation')
plt.ylabel('Final value L(T)')
plt.grid(True)
plt.show()

# Print the mean of the final values
print(np.mean(L_fin))
